// -----------------------------------------------------------
// Fonts
// -----------------------------------------------------------

// FONTS | light 300 - regular 400 - medium 500 - semi-bold 600 - bold 700

@import url('https://fonts.googleapis.com/css?family=Montserrat:300,400,500,600');
@import url('https://fonts.googleapis.com/css?family=Poppins:300,400,500,600,700');

$font-default      : 'Poppins', Arial, helvetica, sans-serif !default;
$font-secundary    : 'Montserrat', Arial, helvetica, sans-serif;

// REM
@function rem( $pxsize ) { 

  @return ( $pxsize/16 ) + rem; 

}

@mixin typography( $weight: $x, $size: $y, $font: $font-default) {
  
  font: $weight rem( $size ) $font;

}


$font-sizes: (

  // full hd
  mg-large     : 50px,
  lg-large     : 40px,

  // desktop
  md-large-z   : 30px,
  md-large-x   : 25px,
  md-large-y   : 20px,
  
  // tablet
  sm-medium     : 18px,

  // mobile
  xs-small      : 16px,
);

/// Function use-fz
/// Use for values extract in map variable $font-sizes.
/// 
/// @access public
/// 
/// @param {Number} $size - `Size` value
/// 
/// @example scss - Use
///   .foo {
///     font-size: use-fz(x-small);
///   }
///
/// @example css - CSS result
///   .foo {
///     font-size: 12px;
///   }

@function use-fz( $size ){

  @if map-has-key( $font-sizes, $size ) {

    @return map-get( $font-sizes, $size );

  }
  
  @warn "Unfortunately, no value could be retrieved from `#{size}`. "
    + "Please make sure it is defined in `$font-sizes` map.";
  @return null;
}

/// Mixin make-fz
/// Use for create classes and placeholders in the map $font-sizes.
///
/// @access public
///
/// @param {String} $name - `Name` radical for class
/// Default param 'fz' - Abreviate for the font-size.

@mixin make-fz( $name: fz ){

  @each $sufix, $value in $font-sizes {

    .#{ $name }--#{ $sufix }, 
    %#{ $name }--#{ $sufix } {

      font-size: use-fz( $sufix );

    }
  }
}

/// Prefix for using in the mixin make-fz
///
/// * Necessary use '-'
/// Ex: $prefix : 'df-';
///
/// @type String
///
/// @example scss - Use
///   $prefix : 'df-';
///   @include make-fz($prefix + 'font');
///
/// @example css - CSS result
///   .df-font-x-large {
///     font-size: 24px;
///   }




/// Using mixin make-fz
/// Generate classes and placeholders
///
/// @example scss and css - SCSS and CSS result
///   ....
///   %font-medium, 
///   .font-medium {
///     font-size: 16px;
///   }
///
///   %font-small {
///   .font-small {
///     font-size: 14px;
///   }
///   ....

@include make-fz($prefix + 'fz');



